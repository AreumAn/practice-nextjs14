// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  bio       String?
  create_at DateTime @default(now())
  update_at DateTime @updatedAt
  tweets    Tweet[]
  likes     Like[]
  responses Response[]
}

model Tweet {
  id        Int      @id @default(autoincrement())
  tweet     String
  create_at DateTime @default(now())
  update_at DateTime @updatedAt
  user_id   Int
  user      User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  likes     Like[]
  responses Response[]
}

model Like {
  create_at DateTime @default(now())
  user_id   Int
  user      User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  tweet_id  Int
  tweet     Tweet    @relation(fields: [tweet_id], references: [id], onDelete: Cascade)

  @@id(name: "id", [user_id, tweet_id])
}

model Response {
  id        Int      @id @default(autoincrement())
  response  String
  create_at DateTime @default(now())
  update_at DateTime @updatedAt
  user_id   Int
  user      User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  tweet_id  Int
  tweet     Tweet    @relation(fields: [tweet_id], references: [id], onDelete: Cascade)
}
